<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.exam.config.ProductsMapper">

    <!-- Result Map 정의 -->
    <resultMap id="ProductsResultMap" type="ProductsDTO">
        <id property="productId" column="product_id"/>
        <result property="categoryId" column="category_id"/>
        <result property="discountId" column="discount_id"/>
        <result property="productName" column="product_name"/>
        <result property="productPrice" column="product_price"/>
        <result property="productImage" column="product_image"/>
        <result property="productDescription" column="product_description"/>
        <result property="unit" column="unit"/>
        <result property="value" column="value"/>
        <result property="productQr" column="product_qr"/>
        <result property="productCode" column="product_code"/>
        <result property="createDate" column="create_date"/>
    </resultMap>

    <!-- 상품 ID로 상품 조회 -->
    <select id="findProductById" parameterType="int" resultMap="ProductsResultMap">
        SELECT * FROM products WHERE product_id = #{productId}
    </select>

    <!-- 모든 상품 조회 -->
    <select id="findAllProducts" resultType="ProductsDTO">
        SELECT * FROM products
    </select>

    <!-- 상품 추가 -->
    <insert id="addProduct" parameterType="ProductsDTO" useGeneratedKeys="true" keyProperty="productId">
        INSERT INTO products (category_id, discount_id, product_name, product_price, product_image, product_description, unit, value, product_qr, product_code, create_date)
        VALUES (#{categoryId}, #{discountId}, #{productName}, #{productPrice}, #{productImage}, #{productDescription}, #{unit}, #{value}, #{productQr}, #{productCode}, #{createDate})
    </insert>

    <!-- 상품 수정 -->
    <update id="updateProduct" parameterType="ProductsDTO">
        UPDATE products
        SET category_id = #{categoryId},
            discount_id = #{discountId},
            product_name = #{productName},
            product_price = #{productPrice},
            product_image = #{productImage},
            product_description = #{productDescription},
            unit = #{unit},
            value = #{value},
            product_qr = #{productQr},
            product_code = #{productCode},
            create_date = #{createDate}
            product_detailed_description = #{productDetailedDescription},
            product_additional_info = #{productAdditionalInfo},
        WHERE product_id = #{productId}
    </update>

    <!-- 상품 삭제 -->
    <delete id="deleteProduct" parameterType="int">
        DELETE FROM products WHERE product_id = #{productId}
    </delete>
    
    
    <!-- product code 중 category 부분 생성 -->
    <select id="findCategoryCode" parameterType="int" resultType="string">
    	select CONCAT(pet_type, item_type, age_type) as categoryCode
    	from categories
    	where category_id = #{categoryId}
    </select>
    
    <!-- category code로 category id 찾기 -->
    <select id="findCategoryIdByCode" resultType="Integer" parameterType="map">
    	select category_id as categoryId
    	from categories
    	where pet_type = #{petType} and item_type = #{itemType} and age_type = #{ageType}
    </select>
    
    <resultMap id="DiscountProductResult" type="DiscountProductDTO">
    	<id property="discount_id" column="discount_id" />
    	<result property="discount_type" column="discount_type" />
    	<result property="discount_rate" column="discount_rate" />
    	<result property="start_date" column="start_date" />
    	<result property="end_date" column="end_date" />
    	<result property="product_id" column="product_id" />
    	<result property="product_name" column="product_name" />
    	<result property="product_price" column="product_price" />
    	<result property="product_image" column="product_image" />
    	<result property="category_id" column="category_id" />
    	<result property="product_description" column="product_description" />
    	<result property="unit" column="unit" />
    	<result property="value" column="value" />
    	<result property="product_qr" column="product_qr" />
    	<result property="product_code" column="product_code" />
    	<result property="created_date" column="created_date" />
  	</resultMap>
  	
  	<!-- 상품 검색 full text 인덱스
  	<select id="searchProducts" resultMap="DiscountProductResult" parameterType="string">
    	select
      		p.product_id as productId,
    		p.category_id as categoryId,
    		p.discount_id as discountId,
    		p.product_name as productName,
    		p.product_price as productPrice,
    		p.product_image as productImage,
    		p.product_description as productDescription,
    		p.unit as unit,
    		p.value as value,
    		p.product_qr as productQr,
    		p.product_code as productCode,
    		p.created_date as createdDate,
    		d.discount_type as discountType,
    		d.discount_rate as discountRate,
    		d.start_date as startDate,
    		d.end_date as endDate
    	from discounts d join products p on d.discount_id = p.discount_id
    	where
        	MATCH(product_name, product_description)
	          AGAINST(#{query})
  	</select>  -->
  	
  	<!-- 상품 검색 like -->
  	<select id="searchProducts" resultMap="DiscountProductResult" parameterType="string">
    	select
      		p.product_id as productId,
    		p.category_id as categoryId,
    		p.discount_id as discountId,
    		p.product_name as productName,
    		p.product_price as productPrice,
    		p.product_image as productImage,
    		p.product_description as productDescription,
    		p.unit as unit,
    		p.value as value,
    		p.product_qr as productQr,
    		p.product_code as productCode,
    		p.created_date as createdDate,
    		d.discount_type as discountType,
    		d.discount_rate as discountRate,
    		d.start_date as startDate,
    		d.end_date as endDate
    	from discounts d join products p on d.discount_id = p.discount_id
    	where product_name like CONCAT('%', #{query}, '%') or product_description like CONCAT('%', #{query}, '%')
  	</select>
  	
  	<!-- 추천 검색어 -->
  	<select id="getSuggestedProducts" resultType="ProductsDTO" parameterType="string">
		select product_name as productName, product_description as productDescription
		from products
		where product_name like CONCAT('%', #{query}, '%')
	</select>

</mapper>
