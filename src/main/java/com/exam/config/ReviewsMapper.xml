<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.config.ReviewsMapper">

	<select id="findOrderDetailIdByUserId" resultType="java.lang.Integer" parameterType="map">
		select
			order_detail_id as orderDetailId
		from
			reviews
		where
			user_id = #{userId}	and order_id = #{orderId}
	</select>
	
	<select id="findOrderDetailIdsByUserId" resultType="int" parameterType="int">
		select
			order_detail_id as orderDetailId
		from
			reviews
		where
			user_id = #{userId}
	</select>
	
	<select id="findReviews" resultType="ReviewsDTO" parameterType="int">
		select
			review_id as reviewId,
			product_id as productId,
			user_id as userId,
			order_id as orderId,
			order_detail_id as orderDetailId,
			contents,
			review_image as reviewImage,
			rating
		from
			reviews
		where
			product_id = #{productId}
	</select>
	
	<select id="findReviewCounts" resultType="int" parameterType="int">
		select
			count(review_id) as count
		from
			reviews
		where
			product_id = #{productId}
	</select>
	
	<select id="findReviewsByUserId" resultType="ReviewsDTO" parameterType="int">
		select
			r.review_id as reviewId,
			r.product_id as productId,
			r.user_id as userId,
			r.order_id as orderId,
			r.order_detail_id as orderDetailId,
			r.contents,
			r.review_image as reviewImage,
			r.rating,
			r.review_date as reviewDate,
			p.product_name as productName,
			p.product_image as productImage
		from
			reviews r
		join
			products p
		on
			r.product_id = p.product_id
		where
			user_id = #{userId}
	</select>
	
	<select id="existReview" parameterType="int" resultType="boolean">
		select
			count(*) > 0
		from
			reviews
		where
			order_detail_id = #{orderDetailId}
	</select>
	
	<select id="findProductReview" parameterType="int" resultType="ReviewStatsDTO">
		select
			count(*) as reviewsCount,
			round(avg(rating), 1) as avgRating
		from
			reviews
		where
			product_id = #{productId}
	</select>
</mapper>